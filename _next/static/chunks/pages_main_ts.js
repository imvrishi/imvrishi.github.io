/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["pages_main_ts"],{

/***/ "./pages/main.ts":
/*!***********************!*\
  !*** ./pages/main.ts ***!
  \***********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Anything; }\n/* harmony export */ });\n/* module decorator */ module = __webpack_require__.hmd(module);\nvar isBrowser = function isBrowser() {\n  return true;\n};\n\nvar innerWidth = 800;\nvar innerHeight = 800;\nvar canvas;\nvar context;\n\nif (isBrowser()) {\n  innerWidth = window.innerWidth;\n  innerHeight = window.innerHeight;\n  canvas = document.querySelector(\"canvas\");\n  context = canvas.getContext(\"2d\"); // window.onresize = resize;\n\n  canvas.onmousemove = onMouseMove;\n  canvas.ontouchmove = onTouchMove;\n  canvas.ontouchend = onMouseLeave;\n  document.onmouseleave = onMouseLeave;\n}\n\nvar STAR_COUNT = (innerWidth + innerHeight) / 8;\nvar STAR_SIZE = 3;\nvar STAR_MIN_SCALE = 0.2;\nvar OVERFLOW_THRESHOLD = 50;\nvar scale = 1,\n    // device pixel ratio\nwidth,\n    height;\nvar stars = [];\nvar pointerX, pointerY;\nvar velocity = {\n  x: 0,\n  y: 0,\n  tx: 0,\n  ty: 0,\n  z: 0.0005\n};\nvar touchInput = false;\ngenerate();\nresize();\nstep();\n\nfunction generate() {\n  for (var i = 0; i < STAR_COUNT; i++) {\n    stars.push({\n      x: 0,\n      y: 0,\n      z: STAR_MIN_SCALE + Math.random() * (1 - STAR_MIN_SCALE)\n    });\n  }\n}\n\nfunction placeStar(star) {\n  star.x = Math.random() * width;\n  star.y = Math.random() * height;\n}\n\nfunction recycleStar(star) {\n  var direction = \"z\";\n  var vx = Math.abs(velocity.x),\n      vy = Math.abs(velocity.y);\n\n  if (vx > 1 || vy > 1) {\n    var axis;\n\n    if (vx > vy) {\n      axis = Math.random() < vx / (vx + vy) ? \"h\" : \"v\";\n    } else {\n      axis = Math.random() < vy / (vx + vy) ? \"v\" : \"h\";\n    }\n\n    if (axis === \"h\") {\n      direction = velocity.x > 0 ? \"l\" : \"r\";\n    } else {\n      direction = velocity.y > 0 ? \"t\" : \"b\";\n    }\n  }\n\n  star.z = STAR_MIN_SCALE + Math.random() * (1 - STAR_MIN_SCALE);\n\n  if (direction === \"z\") {\n    star.z = 0.1;\n    star.x = Math.random() * width;\n    star.y = Math.random() * height;\n  } else if (direction === \"l\") {\n    star.x = -OVERFLOW_THRESHOLD;\n    star.y = height * Math.random();\n  } else if (direction === \"r\") {\n    star.x = width + OVERFLOW_THRESHOLD;\n    star.y = height * Math.random();\n  } else if (direction === \"t\") {\n    star.x = width * Math.random();\n    star.y = -OVERFLOW_THRESHOLD;\n  } else if (direction === \"b\") {\n    star.x = width * Math.random();\n    star.y = height + OVERFLOW_THRESHOLD;\n  }\n}\n\nfunction resize() {\n  scale = isBrowser() ? window.devicePixelRatio || 1 : 1;\n  width = innerWidth * scale;\n  height = innerHeight * scale;\n  canvas.width = width;\n  canvas.height = height;\n  stars.forEach(placeStar);\n}\n\nfunction step() {\n  context.clearRect(0, 0, width, height);\n  update();\n  render();\n  requestAnimationFrame(step);\n}\n\nfunction update() {\n  velocity.tx *= 0.96;\n  velocity.ty *= 0.96;\n  velocity.x += (velocity.tx - velocity.x) * 0.8;\n  velocity.y += (velocity.ty - velocity.y) * 0.8;\n  stars.forEach(function (star) {\n    star.x += velocity.x * star.z;\n    star.y += velocity.y * star.z;\n    star.x += (star.x - width / 2) * velocity.z * star.z;\n    star.y += (star.y - height / 2) * velocity.z * star.z;\n    star.z += velocity.z; // recycle when out of bounds\n\n    if (star.x < -OVERFLOW_THRESHOLD || star.x > width + OVERFLOW_THRESHOLD || star.y < -OVERFLOW_THRESHOLD || star.y > height + OVERFLOW_THRESHOLD) {\n      recycleStar(star);\n    }\n  });\n}\n\nfunction render() {\n  stars.forEach(function (star) {\n    context.beginPath();\n    context.lineCap = \"round\";\n    context.lineWidth = STAR_SIZE * star.z * scale;\n    context.strokeStyle = \"rgba(255,255,255,\" + (0.5 + 0.5 * Math.random()) + \")\";\n    context.beginPath();\n    context.moveTo(star.x, star.y);\n    var tailX = velocity.x * 2,\n        tailY = velocity.y * 2; // stroke() wont work on an invisible line\n\n    if (Math.abs(tailX) < 0.1) tailX = 0.5;\n    if (Math.abs(tailY) < 0.1) tailY = 0.5;\n    context.lineTo(star.x + tailX, star.y + tailY);\n    context.stroke();\n  });\n}\n\nfunction movePointer(x, y) {\n  if (Number.isFinite(pointerX) && Number.isFinite(pointerY)) {\n    var ox = x - pointerX,\n        oy = y - pointerY;\n    velocity.tx = velocity.tx + ox / 8 * scale * (touchInput ? 1 : -1);\n    velocity.ty = velocity.ty + oy / 8 * scale * (touchInput ? 1 : -1);\n  }\n\n  pointerX = x;\n  pointerY = y;\n}\n\nfunction onMouseMove(event) {\n  touchInput = false;\n  movePointer(event.clientX, event.clientY);\n}\n\nfunction onTouchMove(event) {\n  touchInput = true;\n  movePointer(event.touches[0].clientX, event.touches[0].clientY);\n  event.preventDefault();\n}\n\nfunction onMouseLeave() {\n  pointerX = NaN;\n  pointerY = NaN;\n}\n\nfunction Anything() {\n  return null;\n}\n_c = Anything;\n\nvar _c;\n\n$RefreshReg$(_c, \"Anything\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/main.ts\n");

/***/ })

}]);